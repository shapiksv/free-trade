server:
  port: ${SERVER_PORT_TRANSFER}

spring:
  kafka:
    consumer:
      bootstrap-servers:
        - localhost:9092
      group-id: conductor_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers:
        - localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?currentSchema=${POSTGRES_SCHEMA_TRANSFER}&serverTimezone=UTC&assumeMinServerVersion=9.0&ApplicationName=MediaAdsService&preferQueryMode=extendedForPrepared
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
    jdbc-interceptors: com.amazonaws.xray.sql.postgres.TracingInterceptor
    hikari:
      maximum-pool-size: 10000
      minimum-idle: 5
  flyway:
    baseline-on-migrate: true
    enabled: true
topic:
  conductor: ${CONDUCTOR_TOPIC}
  notification: ${NOTIFICATION_TOPIC}
token:
  signing:
    key: ${SIGNING_KEY}